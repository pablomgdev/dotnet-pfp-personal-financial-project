/**************************************************************************************************\
|                                Load this in dbdiagram.io                                         |
\**************************************************************************************************/

// IMPORTANT NOTE: IS NOT UPDATED AND IS ONLY TO KNOW WHY IT WAS DONE EVERY DECISIONS.
//  DO NOT USED TO GENERATE THE POSTGRESQL FILE, JUST FOR WATCHING THE NOTES

// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

// datetime used because date times are saved in UTC
// user_id is the id got from identity microservice

Table transactions {
  id uniqueidentifier [primary key] // no predecible
  internal_id integer [unique]  // to work in database with better performance
  amount numeric  // money. Precision is important
  description varchar(255)
  recurrence_id integer  // if is not null, is not take into account when calculating total amounts because it is used to generate transactions in this table
  is_split bit
  transaction_not_split_internal_id bit // amount of money before been split
  created_date datetime
  updated_date datetime
  is_deleted bit
  deleted_date datetime
  user_id uniqueidentifier
}

Table recurrences {
  id integer [primary key]
  "name" varchar(50)
  created_date datetime
  updated_date datetime
  is_deleted bit
  deleted_date datetime
  user_id uniqueidentifier
}

Table categories {
  id integer [primary key]
  "name" varchar(50) [unique]
  created_date datetime
  updated_date datetime
  is_deleted bit
  deleted_date datetime
  user_id uniqueidentifier
}

Table transactions_categories {
  transaction_internal_id integer [primary key]
  category_id integer [primary key]
}

Table funds {
  id uniqueidentifier [primary key]
  internal_id integer [unique]
  "name" varchar(50) [unique]
  description varchar(255)
  total_amount numeric // to track the transactions (look at value). DANGEROUS!!
  created_date datetime
  updated_date datetime
  is_deleted bit
  deleted_date datetime
  user_id uniqueidentifier
}

Table funds_categories {
  fund_internal_id integer [primary key]
  category_id integer [primary key]
}

Table limits {
  id uniqueidentifier [primary key]
  internal_id integer [unique]
  category_id integer
  amount numeric
  created_date datetime
  updated_date datetime
  is_deleted bit
  deleted_date datetime
  user_id uniqueidentifier
}

// transactions and recurrences
Ref: transactions.recurrence_id - recurrences.id
// transactions and categories
Ref: transactions.internal_id <> transactions_categories.category_id
Ref: categories.id <> transactions_categories.transaction_internal_id
// funds and categories
Ref: funds_categories.fund_internal_id <> funds.internal_id
Ref: funds_categories.category_id <> categories.id
// limits and categories
Ref: limits.internal_id - categories.id
